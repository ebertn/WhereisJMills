{
  "name": "opusscript",
  "version": "0.0.3",
  "description": "JS bindings for libopus 1.1.4, ported with emscripten",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/abalabahaha/opusscript.git"
  },
  "keywords": [
    "libopus",
    "encoder",
    "emscripten"
  ],
  "author": {
    "name": "abalabahaha"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/abalabahaha/opusscript/issues"
  },
  "homepage": "https://github.com/abalabahaha/opusscript#readme",
  "readme": "opusscript\n==========\n### JS bindings for libopus 1.1.3, ported with emscripten\n\n```js\nvar opusscript = require(\"opusscript\");\n\n// 48kHz sampling rate, 20ms frame duration, stereo audio (2 channels)\nvar samplingRate = 48000;\nvar frameDuration = 20;\nvar channels = 2;\n\n// Optimize encoding for audio. Available applications are VOIP, AUDIO, and RESTRICTED_LOWDELAY\nvar encoder = new opusscript(samplingRate, channels, opusscript.Application.AUDIO);\n\nvar frameSize = samplingRate * frameDuration / 1000;\n\n// Get PCM data from somewhere and encode it into opus\nvar pcmData = new Buffer(pcmSource);\nvar encodedPacket = encoder.encode(pcmData, frameSize);\n\n// Decode the opus packet back into PCM\nvar decodedPacket = encoder.decode(encodedPacket);\n\n// Delete the encoder when finished with it (Emscripten does not automatically call C++ object destructors)\nencoder.delete();\n```\n",
  "readmeFilename": "README.md",
  "_id": "opusscript@0.0.3",
  "dist": {
    "shasum": "47656f29dd48a831e77df65adf7de3e6b1475f28"
  },
  "_from": "opusscript@^0.0.3",
  "_resolved": "https://registry.npmjs.org/opusscript/-/opusscript-0.0.3.tgz"
}
